# This workflow will triage pull requests and apply a label based on the
# convetional scope contained in the title of the pull request.
#
# To use this workflow, you will need to set up
# a .github/labeler.yml configuration file

name: "Pull request labeler"
on:
  pull_request:
    types: [opened, edited]

jobs:
  triage:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/github-script@v6
        id: set-result
        with:
          script: |
            let labels = [];
            const title = context.payload.pull_request.title;

            if (title.match(/\(.*user\)/)) labels.push('user');
            if (title.match(/\(.*issuer\)/)) labels.push('issuer');
            if (title.match(/\(io-sign\)/)) labels.push('internal');
            if (title.match(/\(io-services\)/)) labels.push('internal');
            if (title.match(/\(pdv-tokenizer\)/)) labels.push('internal');
            if (title.match(/\(internal\)/)) labels.push('internal');
            if (title.match(/^docs/)) labels.push('docs');
            if (title.match(/^bug/)) labels.push('bug');
            if (title.match(/^fix/)) labels.push('fix');
            if (title.match(/^chore/)) labels.push('chore');
            if (title.match(/^feat/)) labels.push('feat');
            if (title.match(/^build/)) labels.push('build');
            if (title.match(/^ci/)) labels.push('ci');
            if (title.match(/^refactor/)) labels.push('refactor');
            if (title.match(/!:/)) labels.push('breaking-change');

            if (labels.length > 0) {
              await github.rest.issues.addLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.payload.pull_request.number,
                labels: labels
              });
            }
          result-encoding: string
